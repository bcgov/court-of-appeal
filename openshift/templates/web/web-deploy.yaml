---
apiVersion: v1
kind: Template
metadata:
  annotations:
    description: Deployment template for a vue on nginx
    tags: vue,nginx
  name: vue-on-nginx
objects:
  - kind: NetworkSecurityPolicy
    apiVersion: security.devops.gov.bc.ca/v1alpha1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow the frontend (web) to talk to the api pod.
      source:
        - - role=${ROLE}
          - app=${APP_NAME}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE_NAME}-${TAG_NAME}
      destination:
        - - role=api
          - app=${APP_NAME}
          - env=${TAG_NAME}
          - $namespace=${NAMESPACE_NAME}-${TAG_NAME}

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      replicas: 2
      selector:
        name: ${NAME}
      strategy:
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
            app: ${APP_NAME}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          containers:
            - image: ${NAME}
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: API_URL
                  value: ${API_URL}
                - name: API_SERVICE_NAME
                  value: ${API_SERVICE_NAME}
                - name: API_PATH
                  value: ${API_PATH}
                - name: WEB_BASE_HREF
                  value: ${WEB_BASE_HREF}
                - name: RealIpFrom
                  value: ${REAL_IP_FROM}
                - name: AdditionalRealIpFromRules
                  value: ${AdditionalRealIpFromRules}
                - name: IpFilterRules
                  value: ${IpFilterRules}
                - name: HTTP_BASIC
                  value: ${HTTP_BASIC}
                - name: HTTP_BASIC_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: user
                - name: HTTP_BASIC_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}
                      key: password
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              livenessProbe:
                httpGet:
                  path: /nginx_status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                httpGet:
                  path: /nginx_status
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 10
                timeoutSeconds: 60
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${NAME}:${TAG_NAME}

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}
      sessionAffinity: None
      type: ClusterIP

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/ip_whitelist: ${ALLOW_LIST}
    spec:
      host: ${APPLICATION_DOMAIN}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${NAME}
        weight: 100

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
        app: ${APP_NAME}
        role: ${ROLE}
        env: ${TAG_NAME}
    stringData:
      allow-list: ${ALLOW_LIST}
      user: ${HTTP_BASIC_USERNAME}
      password: ${HTTP_BASIC_PASSWORD}
    type: Opaque

parameters:
  - description: The name assigned to all of the openshift objects defined in this template. It is also the name of runtime image you want.
    displayName: Name
    name: NAME
    required: true
    value: web

  - name: APP_NAME
    displayName: App Name
    description: App Name
    required: true
    value: court-of-appeal
  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: web

  - name: NAMESPACE_NAME
    displayName: Namespace Name
    description: The base namespace name for the project.
    required: true
    value: 876c6c

  - description: The namespace where to get the above image name
    displayName: Image Namespace
    name: IMAGE_NAMESPACE
    required: true
    value: 876c6c-tools
  - description:
      OpenShift cluster private IP range in CIDR notation, used by Nginx
      ngx_http_realip_module.
    displayName: OpenShift Cluster IP Range
    name: REAL_IP_FROM
    required: true
    value: 172.51.0.0/16
  - description:
      The default URL to use when proxying requests to the application's
      API.  The value here will be overridden if a API_SERVICE_NAME is defined.
    displayName: API URL
    name: API_URL
    required: true
    value: http://api:8080/api
  - description:
      The name of the service endpoint for the API.  Used to wire up to an
      API endpoint within the same project; overriding the URL defined by API_URL.
    displayName: API Service Name
    name: API_SERVICE_NAME
    required: false
    value: api
  - description: The root path for the API.  Used in conjunction with API_SERVICE_NAME.
    displayName: API Path
    name: API_PATH
    required: true
    value: /api
  - name: WEB_BASE_HREF
    displayName: Web Base Href
    description: The application host path (Web Base Href).
    required: false
    value: /court-of-appeal/
  - description:
      Additional known and trusted reverse proxy ips conforming to nginx
      set_real_ip_from directive syntax. Multiple directives are allowed, separated
      by semicolon.
    displayName: Additional real_ip_from Rules
    name: AdditionalRealIpFromRules
  - description: Nginx ngx_http_access_module ip filter rules
    displayName: Ip Filter Rules
    name: IpFilterRules
    value:
  - name: HTTP_BASIC
    displayName: HTTP Basic Nginx Config Line
    description:
      For very simple HTTP Basic authentication, use %HTTP_BASIC% in your
      nginx config and provide the value here that you want in nginx config, e.g., `auth_basic
      'restricted';`
    required: false
    value:
  - name: HTTP_BASIC_USERNAME
    displayName: HTTP Basic Username
    description: Username for use with Basic authentication.
    required: false
    value:
  - name: HTTP_BASIC_PASSWORD
    displayName: HTTP Basic Password
    description: Password for use with Basic authentication.
    required: false
    value:
  - description: The endpoint used for routing access to the application.
    displayName: Application Domain
    name: APPLICATION_DOMAIN
    value: court-of-appeal-dev.silver.devops.bcgov
  - name: ALLOW_LIST
    displayName: Allow List
    description: The allow list containing all of the trusted source IPs.
    required: false
  - description: The TAG name for this environment, e.g., dev, test, prod
    displayName: Env TAG name
    name: TAG_NAME
    value: dev

  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "1"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "1"

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 256Mi
